# This workflow updates image paths in Markdown files to GitHub URLs

name: Update Image Paths

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "convert-image-path"
  convert-image-path:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Updates image paths in Markdown files
      - name: Update image paths in Markdown
        run: |
          
          # Exit immediately if a command exits with a non-zero status
          set -e  
          
          # "post_*.md"
          for file in */*/post_*.md; do
          
            # Skip the file if it ends with "_public.md"
            if [[ "$file" == *_public.md ]]; then
              echo "Skipping \"$file\" because it already contains '_public'"
              continue
            fi
          
            echo "------------------------------------------------------------------------------------------"
            echo "Processing \"$file\""
            echo "Directory: $(dirname \"$file\")"
          
            # Define the new file name
            new_file="${file%.md}_public.md"
            
            # Copy the original file to the new file
            cp "$file" "$new_file"
            
            # Check if the new file contains image paths to update
            if grep -q "\!\[.*\](\./images/" "$new_file"; then
              # 이미지 경로를 변경
              # 변경 전:  ![1](./images/1.png)
              # 변경 후:  ![1](https://raw.githubusercontent.com/username/${GITHUB_REPOSITORY}/main/$(dirname "$file")/images/1.png)
              sed -i.bak -E "s|(\!\[.*\]\()\./images/(.*\))|\1https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/$(dirname "$new_file")/images/\2|g" "$new_file"
              echo "Image paths updated in \"$new_file\""
            else
              echo "No image paths to update in \"$new_file\""
            fi

            # Git Add
            if ! git diff --quiet "$new_file"; then
              git add "$new_file"
              echo "Added: \"$new_file\""
            else
              echo "Skipped: \"$new_file\""
            fi

          done

      # Commits changes if there are any
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git status
          git commit -m "Update image paths to GitHub URLs" || echo "No changes to commit"
          git push
